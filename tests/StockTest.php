<?php


namespace App\Tests;


use App\Entity\Stock;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class StockTest extends KernelTestCase
{
    private $entityManager;


    protected function setUp(): void
    {
       $kernel =  self::bootKernel();

       DatabasePrimer::prime($kernel);

       $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();
    }


    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->entityManager->close();
        $this->entityManager = null;
    }

    public function test_stock_can_be_created_in_db(){

        //SetUP

        //Stock
        $stock = new Stock();


        //symbol
        $price = 1000;
        $previousClose = 1100;
        $stock->setSymbol("AMZN")
              ->setShortName("Amazon INC")
              ->setCurrency("USD")
              ->setExchangeName("Nasdaq")
              ->setRegion("US")
              ->setPriceChange($price - $previousClose)
              ->setPrice($price)
              ->setPreviousClose($previousClose);


        $this->entityManager->persist($stock);
        $this->entityManager->flush();


        $stockRepository = $this->entityManager->getRepository(Stock::class);

        $stockRecord = $stockRepository->findOneBy(["symbol" => "AMZN"]);
        //dd($stockRecord->getShortName());

        //Assertion (One for each field)

        $this->assertEquals("Amazon INC", $stockRecord->getShortName());
        $this->assertEquals("USD", $stockRecord->getCurrency());
        $this->assertEquals("Nasdaq", $stockRecord->getExchangeName());
        $this->assertEquals("US", $stockRecord->getRegion());
        $this->assertEquals(-100, $stockRecord->getPriceChange());
        $this->assertEquals(1000, $stockRecord->getPrice());
        $this->assertEquals(1100, $stockRecord->getPreviousClose());

    }

}