<?php


namespace App\Tests\features;


use App\Entity\Stock;
use App\Tests\DatabasePrimer;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

use Symfony\Component\Console\Tester\CommandTester;

class RefreshStockProfileCommandTest extends KernelTestCase
{
    protected $entityManager;


    protected function setUp(): void
    {
        $kernel =  self::bootKernel();

        DatabasePrimer::prime($kernel);

        $this->entityManager = $kernel->getContainer()->get('doctrine')->getManager();
    }


    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->entityManager->close();
        $this->entityManager = null;
    }

    public function test_refresh_stock_command_behaves_corectly_if_stock_doesnt_exist(){
        //Setup
        $application = new Application(self::$kernel);
        $command = $application->find("app:refresh-stock-profile");


        //DO SOMETHING
        $commandTester = new CommandTester($command);

        $commandTester->execute([
            "symbol" => "AMZN",
            "region" => "us"
            ]);

            //ASSERTION
        $repo = $this->entityManager->getRepository(Stock::class);
        $stock =$repo->findOneBy([
            "symbol" => "AMZN"
        ]);


        $this->assertEquals("Amazon INC", $stock->getShortName());
        $this->assertEquals("USD", $stock->getCurrency());
        $this->assertEquals("Nasdaq", $stock->getExchangeName());
        $this->assertEquals("US", $stock->getRegion());
        $this->assertEquals(0, $stock->getPriceChange());
        $this->assertGreaterThan(50, $stock->getPrice());
        $this->assertGreaterThan(50, $stock->getPreviousClose());

    }

}